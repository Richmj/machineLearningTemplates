setwd("C:/Users/ricar/OneDrive/Desktop/machineLearningAtoZ/Machine Learning A-Z (Codes and Datasets)/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/R")
dataset = read.csv('Data.csv')
View(dataset)
View(dataset)
dataset$Age = ifelse(is.na(dataset$Age), )
dataset$Age = ifelse(is.na(dataset$Age), ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)), dataset$Age)
dataset$Age = ifelse(is.na(dataset$Salary), ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)), dataset$Salary)
dataset$Age = ifelse(is.na(dataset$Age), ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)), dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary), ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)), dataset$Salary)
dataset$Country = factor(dataset$Country, levels = c('France', 'Spain', 'Germany'), labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased, levels = c('No', 'Yes'), labels = c(0,1))
import.packages('caTools')
install.packages('caTools')
import(caTools)
library(caTools)
set.sed(123)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(test_set)
training_set = scale(training_set)
training_set[, 2:3] = scale(training_set[, 2:3])
test_set[, 2:3] = scale(test_set[, 2:3])
setwd("C:/Users/ricar/OneDrive/Desktop/machineLearningAtoZ/Machine Learning A-Z (Codes and Datasets)/Part 2 - Regression/Section 4 - Simple Linear Regression/R")
dataset = read.csv('Salary_Data.csv')
View(dataset)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor = lm(formula = Salary ~ YearsExperience, data = training_set)
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
y_pred
install.packages('ggplot2')
library(ggplot2)
ggplot() + geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary), colour = 'red') + geom_line(aes(x=training_set$YearsExperience, y = predict((regressor, newdata = training_set)),)
ggplot() + geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary), colour = 'red') + geom_line(aes(x=training_set$YearsExperience, y = predict(regressor, newdata = training_set)),)
ggplot() + geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary), colour = 'red') + geom_line(aes(x=training_set$YearsExperience, y = predict(regressor, newdata = training_set)), colour = 'blue')
ggplot() + geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary), colour = 'red') + geom_line(aes(x=training_set$YearsExperience, y = predict(regressor, newdata = training_set)), colour = 'blue') + ggtitle('Salary vs Experience (Training set')
ggplot() + geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary), colour = 'red') + geom_line(aes(x=training_set$YearsExperience, y = predict(regressor, newdata = training_set)), colour = 'blue') + ggtitle('Salary vs Experience (Training set)') + xlab('Years of experience') + ylab('Salary')
ggplot() + geom_point(aes(x=test_set$YearsExperience, y=test_set$Salary), colour = 'red') + geom_line(aes(x=training_set$YearsExperience, y = predict(regressor, newdata = training_set)), colour = 'blue') + ggtitle('Salary vs Experience (Training set)') + xlab('Years of experience') + ylab('Salary')
setwd("C:/Users/ricar/OneDrive/Desktop/machineLearningAtoZ/Machine Learning A-Z (Codes and Datasets)/Part 2 - Regression/Section 5 - Multiple Linear Regression/R")
dataset = read.csv('50_Startups.csv')
View(dataset)
dataset$State = factor(dataset$State, levels = c('New York', 'California', 'Florida'), labels = c(1,2,3))
split = sample.split(database$Profit, SplitRatio = 0.8)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State)
regressor = lm(formula = Profit ~ ., data = training_set)
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
y_pred
setwd("C:/Users/ricar/OneDrive/Desktop/machineLearningAtoZ/Machine Learning A-Z (Codes and Datasets)/Part 2 - Regression/Section 6 - Polynomial Regression/R")
dataset = read.csv('Position_Salaries.csv')
View(dataset)
dataset=dataset[2:3]
lin_reg = lm(formula = Salary ~ ., data = dataset)
summary(lin_reg)
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
ploy_reg = lm(formula = Salary ~ ., data = dataset)
poly_reg = lm(formula = Salary ~ ., data = dataset)
View(ploy_reg)
View(poly_reg)
summary(poly_reg)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x=dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x=dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
y_pred = predict(lin_reg, data.frame(Level = 6.5)
y_pred = predict(lin_reg, data.frame(Level = 6.5))
y_pred = predict(lin_reg, data.frame(Level = 6.5))
y_pred = predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3
))
